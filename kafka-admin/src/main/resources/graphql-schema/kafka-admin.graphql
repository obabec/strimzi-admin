type Topic {
    #id: ID
    name: String

    """@transient"""
    partitions: [Partitions]
    config: TopicConfig
}

type Partitions {
    partition: Int
    replicas: [Replicas]
}

type Replicas {
    id: String
    in_sync: Boolean
}

type TopicOnlyName {
    #id: ID
    name: String
}

type TopicConfig {
    partitionCount: Int
    replicationFactor: Int
    isInternal: Boolean
    partitions: [Partitions]
}

input CreateOrMutateTopicConfigInput {
    retentionDays: Int
    minInSyncReplicas: Int
    partitionCount: Int
    replicationFactor: Int
    isInternal: Boolean
}

input CreateTopicInput {
    name: String
    config: CreateOrMutateTopicConfigInput
}

input MutateTopicInput {
    #id: ID!
    name: String!
    config: CreateOrMutateTopicConfigInput
}

extend type Mutation {
    createTopic(input: CreateTopicInput!): Topic
    updateTopic(input: MutateTopicInput!): Topic
    deleteTopic(name: String!): String
}

extend type Query {
    topicList(filter: String): [TopicOnlyName!]
    topic(name: String!): Topic!
}
