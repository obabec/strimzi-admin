extend type Mutation {
    createTopic(input: CreateTopicInput!): TopicDescription
    updateTopic(input: MutateTopicInput!): TopicDescription
    deleteTopic(name: String!): TopicOnlyName
}


extend type Query {
    topicList(filter: JSON): [TopicOnlyName!]
    topicDescription(name: String!): TopicDescription!
}

scalar JSON

type TopicDescription {
    #id: ID
    name: String
    partitions: [Partitions]
    config: TopicConfig
}

""" embedded """
type Partitions {
    partition: Int
    replicas: [Replicas]
}

""" embedded """
type Replicas {
    id: String
    inSync: Boolean
}

""" embedded """
type TopicOnlyName {
    #id: ID
    name: String
}
""" embedded """
type TopicConfig {
    partitionCount: Int
    replicationFactor: Int
    isInternal: Boolean
    # config
    minInsyncReplicas: Int
    pairs: [ConfigEntry]
}

""" embedded """
type ConfigEntry {
    key: String
    value: String
}

""" embedded """
input ConfigEntryInput {
    key: String
    value: String
}

input CreateOrMutateTopicConfigInput {
    partitionCount: Int
    replicationFactor: Int
    isInternal: Boolean
    pairs: [ConfigEntryInput]
}

input CreateTopicInput {
    name: String
    config: CreateOrMutateTopicConfigInput
}

input MutateTopicInput {
    #id: ID!
    name: String!
    config: CreateOrMutateTopicConfigInput
}
